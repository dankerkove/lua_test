local data_types = require "st.zigbee.data_types"
local UintABC = require "st.zigbee.data_types.base_defs.UintABC"

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'2cda4a8ebeb3328f48b89dd179d4e8623e7ad8f1'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.TouchlinkCommissioning.types.TlKeyIndex : UintABC
--- @alias TlKeyIndex
---
--- @field public byte_length number 1
--- @field public DEVELOPMENT_KEY number 0
--- @field public MASTER_KEY number 4
--- @field public CERTIFICATION_KEY number 15
local TlKeyIndex = {}
local new_mt = UintABC.new_mt({NAME = "TlKeyIndex", ID = data_types.name_to_id_map["Uint8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.DEVELOPMENT_KEY]   = "DEVELOPMENT_KEY",
    [self.MASTER_KEY]        = "MASTER_KEY",
    [self.CERTIFICATION_KEY] = "CERTIFICATION_KEY",
  }
  return string.format("%s: %s", self.NAME or self.field_name, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print
new_mt.__index.DEVELOPMENT_KEY   = 0x00
new_mt.__index.MASTER_KEY        = 0x04
new_mt.__index.CERTIFICATION_KEY = 0x0F

setmetatable(TlKeyIndex, new_mt)

return TlKeyIndex
