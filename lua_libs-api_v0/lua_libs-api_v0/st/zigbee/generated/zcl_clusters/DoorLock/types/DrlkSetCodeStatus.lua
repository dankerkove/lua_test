local data_types = require "st.zigbee.data_types"
local UintABC = require "st.zigbee.data_types.base_defs.UintABC"

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'2cda4a8ebeb3328f48b89dd179d4e8623e7ad8f1'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.DoorLock.types.DrlkSetCodeStatus : UintABC
--- @alias DrlkSetCodeStatus
---
--- @field public byte_length number 1
--- @field public SUCCESS number 0
--- @field public GENERAL_FAILURE number 1
--- @field public MEMORY_FULL number 2
--- @field public DUPLICATE_CODE number 3
local DrlkSetCodeStatus = {}
local new_mt = UintABC.new_mt({NAME = "DrlkSetCodeStatus", ID = data_types.name_to_id_map["Uint8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.SUCCESS]         = "SUCCESS",
    [self.GENERAL_FAILURE] = "GENERAL_FAILURE",
    [self.MEMORY_FULL]     = "MEMORY_FULL",
    [self.DUPLICATE_CODE]  = "DUPLICATE_CODE",
  }
  return string.format("%s: %s", self.NAME or self.field_name, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print
new_mt.__index.SUCCESS         = 0x00
new_mt.__index.GENERAL_FAILURE = 0x01
new_mt.__index.MEMORY_FULL     = 0x02
new_mt.__index.DUPLICATE_CODE  = 0x03

setmetatable(DrlkSetCodeStatus, new_mt)

return DrlkSetCodeStatus
