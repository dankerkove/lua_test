local data_types = require "st.zigbee.data_types"
local EnumABC = require "st.zigbee.data_types.base_defs.EnumABC"

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'2cda4a8ebeb3328f48b89dd179d4e8623e7ad8f1'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.DoorLock.types.DrlkUserType : EnumABC
--- @alias DrlkUserType
---
--- @field public byte_length number 1
--- @field public UNRESTRICTED_USER number 0
--- @field public YEAR_DAY_SCHEDULE_USER number 1
--- @field public WEEK_DAY_SCHEDULE_USER number 2
--- @field public MASTER_USER number 3
--- @field public NON_ACCESS_USER number 4
--- @field public NOT_SUPPORTED number 255
local DrlkUserType = {}
local new_mt = EnumABC.new_mt({NAME = "DrlkUserType", ID = data_types.name_to_id_map["Enum8"]}, 1)
new_mt.__index.pretty_print = function(self)
  local name_lookup = {
    [self.UNRESTRICTED_USER]      = "UNRESTRICTED_USER",
    [self.YEAR_DAY_SCHEDULE_USER] = "YEAR_DAY_SCHEDULE_USER",
    [self.WEEK_DAY_SCHEDULE_USER] = "WEEK_DAY_SCHEDULE_USER",
    [self.MASTER_USER]            = "MASTER_USER",
    [self.NON_ACCESS_USER]        = "NON_ACCESS_USER",
    [self.NOT_SUPPORTED]          = "NOT_SUPPORTED",
  }
  return string.format("%s: %s", self.NAME or self.field_name, name_lookup[self.value] or string.format("%d", self.value))
end
new_mt.__tostring = new_mt.__index.pretty_print
new_mt.__index.UNRESTRICTED_USER      = 0x00
new_mt.__index.YEAR_DAY_SCHEDULE_USER = 0x01
new_mt.__index.WEEK_DAY_SCHEDULE_USER = 0x02
new_mt.__index.MASTER_USER            = 0x03
new_mt.__index.NON_ACCESS_USER        = 0x04
new_mt.__index.NOT_SUPPORTED          = 0xFF

setmetatable(DrlkUserType, new_mt)

return DrlkUserType
