local cluster_base = require "st.zigbee.cluster_base"
local PumpConfigurationAndControlClientAttributes = require "st.zigbee.generated.zcl_clusters.PumpConfigurationAndControl.client.attributes" 
local PumpConfigurationAndControlServerAttributes = require "st.zigbee.generated.zcl_clusters.PumpConfigurationAndControl.server.attributes" 
local PumpConfigurationAndControlClientCommands = require "st.zigbee.generated.zcl_clusters.PumpConfigurationAndControl.client.commands"
local PumpConfigurationAndControlServerCommands = require "st.zigbee.generated.zcl_clusters.PumpConfigurationAndControl.server.commands"
local PumpConfigurationAndControlTypes = require "st.zigbee.generated.zcl_clusters.PumpConfigurationAndControl.types"

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'2cda4a8ebeb3328f48b89dd179d4e8623e7ad8f1'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.PumpConfigurationAndControl
--- @alias PumpConfigurationAndControl
---
--- @field public ID number 0x0200 the ID of this cluster
--- @field public NAME string "PumpConfigurationAndControl" the name of this cluster
--- @field public attributes st.zigbee.zcl.clusters.PumpConfigurationAndControlServerAttributes | st.zigbee.zcl.clusters.PumpConfigurationAndControlClientAttributes
--- @field public commands st.zigbee.zcl.clusters.PumpConfigurationAndControlServerCommands | st.zigbee.zcl.clusters.PumpConfigurationAndControlClientCommands
--- @field public types st.zigbee.zcl.clusters.PumpConfigurationAndControlTypes
local PumpConfigurationAndControl = {}

PumpConfigurationAndControl.ID = 0x0200
PumpConfigurationAndControl.NAME = "PumpConfigurationAndControl"
PumpConfigurationAndControl.server = {}
PumpConfigurationAndControl.client = {}
PumpConfigurationAndControl.server.attributes = PumpConfigurationAndControlServerAttributes:set_parent_cluster(PumpConfigurationAndControl) 
PumpConfigurationAndControl.client.attributes = PumpConfigurationAndControlClientAttributes:set_parent_cluster(PumpConfigurationAndControl) 
PumpConfigurationAndControl.server.commands = PumpConfigurationAndControlServerCommands:set_parent_cluster(PumpConfigurationAndControl)
PumpConfigurationAndControl.client.commands = PumpConfigurationAndControlClientCommands:set_parent_cluster(PumpConfigurationAndControl)
PumpConfigurationAndControl.types = PumpConfigurationAndControlTypes

--- Find an attribute by id
---
--- @param command_id number
function PumpConfigurationAndControl:get_attribute_by_id(attr_id)
  local attr_id_map = {
    [0x0000] = "MaxPressure",
    [0x0001] = "MaxSpeed",
    [0x0002] = "MaxFlow",
    [0x0003] = "MinConstPressure",
    [0x0004] = "MaxConstPressure",
    [0x0005] = "MinCompPressure",
    [0x0006] = "MaxCompPressure",
    [0x0007] = "MinConstSpeed",
    [0x0008] = "MaxConstSpeed",
    [0x0009] = "MinConstFlow",
    [0x000A] = "MaxConstFlow",
    [0x000B] = "MinConstTemp",
    [0x000C] = "MaxConstTemp",
    [0x0010] = "PumpStatus",
    [0x0011] = "EffectiveOperationMode",
    [0x0012] = "EffectiveControlMode",
    [0x0013] = "Capacity",
    [0x0014] = "Speed",
    [0x0015] = "LifetimeRunningHours",
    [0x0016] = "Power",
    [0x0017] = "LifetimeEnergyConsumed",
    [0x0020] = "OperationMode",
    [0x0021] = "ControlMode",
    [0x0022] = "AlarmMask",
  }
  local attr_name = attr_id_map[attr_id]
  if attr_name ~= nil then
    return self.attributes[attr_name]
  end
  return nil
end
  
--- Find a server command by id
---
--- @param command_id number
function PumpConfigurationAndControl:get_server_command_by_id(command_id)
  local server_id_map = {
  }
  if server_id_map[command_id] ~= nil then
    return self.server.commands[server_id_map[command_id]]
  end
  return nil
end

--- Find a client command by id
---
--- @param command_id number
function PumpConfigurationAndControl:get_client_command_by_id(command_id)
  local client_id_map = {
  }
  if client_id_map[command_id] ~= nil then
    return self.client.commands[client_id_map[command_id]]
  end
  return nil
end

PumpConfigurationAndControl.attribute_direction_map = {
  ["MaxPressure"] = "server",
  ["MaxSpeed"] = "server",
  ["MaxFlow"] = "server",
  ["MinConstPressure"] = "server",
  ["MaxConstPressure"] = "server",
  ["MinCompPressure"] = "server",
  ["MaxCompPressure"] = "server",
  ["MinConstSpeed"] = "server",
  ["MaxConstSpeed"] = "server",
  ["MinConstFlow"] = "server",
  ["MaxConstFlow"] = "server",
  ["MinConstTemp"] = "server",
  ["MaxConstTemp"] = "server",
  ["PumpStatus"] = "server",
  ["EffectiveOperationMode"] = "server",
  ["EffectiveControlMode"] = "server",
  ["Capacity"] = "server",
  ["Speed"] = "server",
  ["LifetimeRunningHours"] = "server",
  ["Power"] = "server",
  ["LifetimeEnergyConsumed"] = "server",
  ["OperationMode"] = "server",
  ["ControlMode"] = "server",
  ["AlarmMask"] = "server",
}
PumpConfigurationAndControl.command_direction_map = {}

local attribute_helper_mt = {}
attribute_helper_mt.__index = function(self, key)
  local direction = PumpConfigurationAndControl.attribute_direction_map[key]
  if direction == nil then
    error(string.format("Referenced unknown attribute %s on cluster %s", key, PumpConfigurationAndControl.NAME))
  end
  return PumpConfigurationAndControl[direction].attributes[key] 
end
PumpConfigurationAndControl.attributes = {}
setmetatable(PumpConfigurationAndControl.attributes, attribute_helper_mt)

local command_helper_mt = {}
command_helper_mt.__index = function(self, key)
  local direction = PumpConfigurationAndControl.command_direction_map[key]
  if direction == nil then
    error(string.format("Referenced unknown command %s on cluster %s", key, PumpConfigurationAndControl.NAME))
  end
  return PumpConfigurationAndControl[direction].commands[key] 
end
PumpConfigurationAndControl.commands = {}
setmetatable(PumpConfigurationAndControl.commands, command_helper_mt)

setmetatable(PumpConfigurationAndControl, {__index = cluster_base})

return PumpConfigurationAndControl
