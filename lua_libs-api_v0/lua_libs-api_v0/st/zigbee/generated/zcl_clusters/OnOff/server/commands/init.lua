-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'2cda4a8ebeb3328f48b89dd179d4e8623e7ad8f1'
-- ZCL XML version: 7.2

local command_mt = {}
command_mt.__command_cache = {}
command_mt.__index = function(self, key)
  if command_mt.__command_cache[key] == nil then
    local req_loc = string.format("st.zigbee.generated.zcl_clusters.OnOff.server.commands.%s", key)
    local raw_def = require(req_loc)
    local cluster = rawget(self, "_cluster")
    command_mt.__command_cache[key] = raw_def:set_parent_cluster(cluster)
  end
  return command_mt.__command_cache[key]
end
--- @class st.zigbee.zcl.clusters.OnOffServerCommands
---
--- @field public Off st.zigbee.zcl.clusters.OnOff.Off
--- @field public On st.zigbee.zcl.clusters.OnOff.On
--- @field public Toggle st.zigbee.zcl.clusters.OnOff.Toggle
--- @field public OffWithEffect st.zigbee.zcl.clusters.OnOff.OffWithEffect
--- @field public OnWithRecallGlobalScene st.zigbee.zcl.clusters.OnOff.OnWithRecallGlobalScene
--- @field public OnWithTimedOff st.zigbee.zcl.clusters.OnOff.OnWithTimedOff
local OnOffServerCommands = {}

function OnOffServerCommands:set_parent_cluster(cluster)
  self._cluster = cluster
  return self
end

setmetatable(OnOffServerCommands, command_mt)

return OnOffServerCommands
